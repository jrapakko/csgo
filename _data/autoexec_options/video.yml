- opt: func_break_max_pieces
  enable: true
  min_max_vals: [0,"&infin;?"]
  default_val: 15
  name: Breakable items don't do break animation? (unverified)
  desc: |
    Included in many FPS boost cfgs with a val of 0
  val: 0
  input_type: slider

- opt: r_dynamic
  enable: true
  allowed_vals: [0,1]
  default_val: 1
  name: Dynamic Crosshair? (unverified)
  desc: |
    0 to disable
  val: 0
  input_type: toggle

- opt: r_drawtracers_firstperson
  enable: true
  allowed_vals: [0,1]
  default_val: 1
  name: Enable firstperson tracers
  desc: |
    Enables/Disables first person tracers as gun fires (0 to disable)
  val: 0
  input_type: toggle

- opt: muzzleflash_light
  enable: true
  allowed_vals: [0,1]
  default_val: 1
  name: Enable firstperson muzzle flash
  desc: |
    Enables/Disables the muzzleflashes as gun fires (0 to disable)
  val: 0
  input_type: toggle

- opt: safezonex
  enable: false
  min_max_vals: [0.2,1]
  default_val: 0.9
  name: The percentage of the screen width that is considered safe from overscan
  desc: |
    Avoid having some of the game not on screen (See: <a href=http://en.wikipedia.org/wiki/Overscan>Wikipedia: Overscan</a>)
  val: 1
  input_type: slider

- opt: safezoney
  enable: false
  min_max_vals: [0.85,1]
  default_val: 0.9
  name: The percentage of the screen height that is considered safe from overscan
  desc: |
    Avoid having some of the game not on screen (See: <a href=http://en.wikipedia.org/wiki/Overscan>Wikipedia: Overscan</a>)
  val: 1
  input_type: slider

- opt: cl_detail_avoid_force
  enable: true
  min_max_vals: [0,1.0]
  default_val: 0
  name: Force with which to avoid players
  desc: |
    Relates to detail props & players (See: <a href=https://developer.valvesoftware.com/wiki/Detail_props>Valve Developer Wiki: Detail Props</a>)
  val: 0
  input_type: slider

- opt: cl_detail_avoid_radius
  enable: true
  min_max_vals: [0,"&infin;?"]
  default_val: 64
  name: Radius around sprite to avoid players.
  desc: |
    Relates to detail props & players (See: <a href=https://developer.valvesoftware.com/wiki/Detail_props>Valve Developer Wiki: Detail Props</a>)
  val: 0
  input_type: slider

- opt: cl_detail_avoid_recover_speed
  enable: true
  min_max_vals: [0,"&infin;?"]
  default_val: 0
  name: How fast to recover position after avoiding players.
  desc: |
    Relates to detail props & players (See: <a href=https://developer.valvesoftware.com/wiki/Detail_props>Valve Developer Wiki: Detail Props</a>)
  val: 0
  input_type: slider

- opt: cl_detail_max_sway
  enable: true
  min_max_vals: [0,"&infin;?"]
  default_val: 5
  name: Amplitude of the detail prop sway.
  desc: |
    Relates to detail props & players &ndash; affects weapon sway and can stop it (See: <a href=https://developer.valvesoftware.com/wiki/Detail_props>Valve Developer Wiki: Detail Props</a>)
  val: 0
  input_type: slider

- opt: cl_forcepreload
  enable: true
  allowed_vals: [0,1]
  default_val: 0
  name: Whether we should force preloading.
  desc: |
    Toggles whether to preload map into memory (results in more consistent FPS at cost of a longer map loading time)
  val: 1
  input_type: toggle

- opt: fps_max
  enable: false
  min_max_vals: [0,"&infin;"]
  default_val: 300
  name: Maximum FPS (frames per second)
  desc: |
    Set maximum FPS for the engine to run at (recommend you set this to Monitor Frequency (in Hz) * 2 + 10, which 130 for most people). This could result in less heat generation and CPU/GPU load when the engine could be running at a higher fps.
  val: 130
  input_type: slider

- opt: fps_max_menu
  enable: false
  min_max_vals: [0,"&infin;"]
  default_val: 120
  name: Maximum FPS (frames per second) while in game menus
  desc: |
    Set maximum FPS for engine to run at while in menus. Recommend this is set to 60 &ndash; there is no real benefit to setting this high and most studies seem to believe the human range of vision can handle around 30fps so there is no need to stress your system by having this much higher than that.
    60fps should be undiscernable from anything higher in menus.
  val: 60
  input_type: slider

- opt: engine_nofocus_sleep
  enable: false
  min_max_vals: [0,"&infin;(careful settings this can cause major instability)"]
  default_val: 50
  name: Engine sleep on window focus
  desc: |
    If the game window loses focus, the engine sleeps for this many milliseconds after every frame. This is ~ 15-20fps while the game is in the background
  val: 50
  input_type: slider

- opt: mat_queue_mode
  enable: false
  allowed_vals: [-1,0,1,2]
  default_val: -1
  name: Multicore Rendering
  desc: |
    &minus;2=legacy default
    &minus;1=default
    0=synchronous single thread
    1=queued single thread
    2=queued multithreaded
    Sets the multicore rendering mode (threads and synchronous behavior). &minus;1 should default to optimal settings for your system.
  val: -1
  input_type: dropdown


- opt: mat_monitor_gamma
  enable: false
  min_max_vals: [1.6,2.6]
  default_val: 2.2
  name: Monitor Gamma Value
  desc: |
    Adjusts gamma correction (See: <a href=http://en.wikipedia.org/wiki/Gamma_correction>Wikipedia: Gamma Correction</a>)
  val: 2.0
  input_type: slider

- opt: mat_vsync
  enable: true
  allowed_vals: [0,1]
  default_val: 1
  name: Toggle VSync
  desc: |
    VSync protects against screen tearing by double-buffering frames, but results in lower FPS due to doubling up on frames and by limiting the engine to 60FPS and RESULTS IN INPUT LAG (bad for games like CS:GO where reactions are key). See: <a href="http://en.wikipedia.org/wiki/Screen_tearing">Wikipedia: Screen Tearing</a>
  val: 0
  input_type: toggle

- opt: mat_savechanges
  enable: true
  allowed_vals: ["N/A"]
  default_val: "Writes mat command changes out"
  name: Saves changes to mat_* commands
  desc: |
    Enable this if you have made any changes to commands starting with "mat_" or they won't actually affect your game's settings
  val: "N/A"
  input_type: none
